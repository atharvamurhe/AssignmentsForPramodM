@model IEnumerable<StoreManagement.DAL.Data.Model.AdvProduct>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>

<form asp-controller="AdvProducts" asp-action="Index" method="get" onsubmit="beforeSubmit()">
    <div class="d-flex mb-3  justify-content-center">
        <input class="form-control w-50" value="@ViewData["searchQuery"]" name="searchQuery" type="search" placeholder="Search" aria-label="Search">
        <button class="btn btn-outline-success mx-2" type="submit">Search</button>
    </div>
    <div class="d-flex justify-content-center">
        <button class="btn btn-primary" name="pageChange" value="-1" type="submit" @ViewData["PrevBtn"]>Previous Page</button>
        <input id="pageNum" class="mx-3 text-center" name="pageNumber" type="number" value="@ViewData["PageNum"]" />
        <button id="btnNext" class="btn btn-primary" name="pageChange" value="1" type="submit" @ViewData["NextBtn"]>Next Page</button>
        <label class="my-auto ml-2">Results Per Page: </label>
        <input name="pageSize" value="@ViewData["PerPage"]" type="number" />
    </div>
</form>

<p>
    <a asp-action="Create">Create New</a>
    <label class="float-right">Total Results: @ViewData["TotalResults"]</label>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Cost_Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.HSN_Code)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Is_Financeable)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedOn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UpdatedOn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductCategory)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Cost_Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HSN_Code)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Is_Financeable)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedOn)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UpdatedOn)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductCategory.Category)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
